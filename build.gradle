//querydsl 추가
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
//querydsl 추가
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.twogather'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExtensions
}
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'junit:junit:4.13.2'
	implementation 'org.projectlombok:lombok:1.18.26'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.json', name: 'json', version: '20230227'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'io.rest-assured:rest-assured:4.4.0'
	implementation 'io.rest-assured:rest-assured:4.4.0'
	implementation 'org.springframework.restdocs:spring-restdocs-restassured'
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// .adoc 파일에서 빌드, 스니펫 생성을 자동으로 구성되기 위해 추가하는 의존성
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	// restdocs에서 MockMvc를 사용할 때 사용하는 의존성
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	//email 인증
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	testImplementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.google.guava:guava:30.1.1-jre'
	//jwt
	implementation 'com.auth0:java-jwt:3.4.1'
	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:5.0.0"
	implementation "com.querydsl:querydsl-apt:5.0.0"
	//mysql
	implementation 'mysql:mysql-connector-java:8.0.26'
}


// 스니펫이 위치할 경로를 지정한다
ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	useJUnitPlatform()
	// 스니펫 디렉터리를 출력으로 추가하도록 테스트 작업
	outputs.dir snippetsDir
	// Jenkins에서 빌드할때에는 JPA구성이 되어있지 않아 빌드시에는 제외하도록 설정
	filter {
		excludeTestsMatching "com.ae.stagram.domain.**.dao.*"
	}
}

// ext에서 정의한 경로에 스니펫을 넣어준뒤 테스트를 진행한다
asciidoctor {
	configurations "asciidoctorExtensions"
	inputs.dir snippetsDir
	dependsOn test
	sources {
		include('*.adoc')
	}
}
// 기존에 존재하는 docs를 삭제한다
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}
// build시 생성된 html문서를 static/docs에 copy하기 위한 테스크
task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

//bootJar는 실행가능한 jar을 빌드하는데 사용하며, Jar로 빌드가 되면서 실제 배포시 생성된 명세 html파일의 경로를 찾아 BOOT-INF/classes/static/docs 맵핑
bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}

// build시 copyDocument 테스크를 실행한다
build {
	dependsOn copyDocument
}
tasks.named('test') {
	useJUnitPlatform()
}
//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
jar {
	enabled = false
}